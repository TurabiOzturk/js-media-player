Todo:
v1: // data sourcing == database
- list playlists and let user to select which playlist they want to listen
- load first playlist on initial load
- make sure all functionality works as is
- let user to pick playlist

v2:
- give ability to enable/disable tracks in playlist in data.json, only enabled tracks should show up on UI (data structuring)
- Allow tracks to be sorted on data.json and on Ui (sorting algorithms)

v3:
- datayi api dan cek (api json kullanacak)

v4:
- api datayi veritabanindan cekecek

v5:
- playlist ve trackleri admin panelinden yonet
 (auth, jwt tokenlar)


var arr = [4,2,3,1,6,8]

ordered
var arr = [1,2,3,4,6,8]

SELECT * FROM table ORDER BY displayORDER ASC

TODO:


- add hyperlinks to the track and artist page
- maybe add albums? and parse albums entirely?
- figure out licensing
- Add rating for songs 1-5 > need to pull songs from JSON first

- media queries
- scroll bar style
- Log how many times each song have been played
- Browse different playlists.
    - load different playlists.
- Mute/unmute


Project TODO:

- Fork the initial repo
- Contribute to initial repo
- Write documentation for the changes made


DONE: 
- define a function to reset the playlist properly ✅
- Add repeat option for song & playlist ✅

- Reset track if current seconds is > 5 ✅
- onload background showing weird ✅
- fix loadTrack, prevTrack and nextTrack sync issues. ✅
- manage prev, next and current indexes on playFromList. ✅
- generatePlaylist error handling in else case ✅
- update .gitignore > > .txt ✅
- Change variable names from snake_case to camelCase ✅
- play/pause with space button ✅
- Vercel file paths not working ✅
- show playlist on the screen ✅
- Make list scrollable ✅
- Change the current track when a song from list getting clicked ✅
- Parse the dominant color of the pic ✅
    - set dominant color as background color using colorThief ✅
- Add shuffle option ✅



